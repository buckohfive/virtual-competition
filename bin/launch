#!/usr/bin/env bash

set -eu

which cgcef_verify >/dev/null || { echo "I need CGC scripts, run me in their VM!"; exit 1; }

MYDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
CHALLENGES="/vagrant/shared/cgc-challenges"
WEBROOT="/vagrant/shared/webroot"
ROUNDLEN=${ROUNDLEN-300}
ROUNDS=${ROUNDS-100}
POLLS=${POLLS-100}
CS_LIMIT=${CS_LIMIT-30}
CS_ROUNDS_DURATION=${CS_ROUNDS_DURATION-10}

function running {
    if pgrep $1 > /dev/null && [ -e /tmp/${1}.pid ] ; then
        return 0
    else
        return 1
    fi
}

function status {
    if running ti-server; then
        echo "ti-server is running with PID `cat /tmp/ti-server.pid`"
    else
        echo "ti-server STOPPED"
    fi
    if running ti-rotate; then
        echo "ti-rotate is running with PID `cat /tmp/ti-rotate.pid`"
    else
        echo "ti-rotate STOPPED"
    fi
}

function start {
    if [ -z "$1" ] || [ "$1" = ti-rotate ]; then
        if running ti-rotate; then
            echo "ti-rotate already running!"
            exit 1
        fi

        rm -rf "$WEBROOT"
        mkdir "$WEBROOT"
        # Note: run only one of these! This is the real round-by-round simulation
        nohup "$MYDIR/ti-rotate" --cbdir "$CHALLENGES" --webroot "$WEBROOT" \
                           --roundlen "$ROUNDLEN" --team 6 --rounds "$ROUNDS" \
                           --polls "$POLLS" \
                           --cs-limit "$CS_LIMIT" --cs-rounds-duration "$CS_ROUNDS_DURATION" \
                           --log /tmp/ti-rotate.log \
                           --debug >/tmp/ti-rotate.stdout 2>/tmp/ti-rotate.stderr &
        echo $! > /tmp/ti-rotate.pid
        echo "ti-rotate STARTED"
    fi

    if [ -z "$1" ] || [ "$1" = ti-server ]; then
        if running ti-server; then
            echo "ti-server already running!"
            exit 1
        fi

        nohup "$MYDIR/ti-server" --cbdir "$CHALLENGES" --webroot "$WEBROOT" \
                           --port 8888 \
                           --username "team-6" --password 9fb864f629eb4502edd795e5b7d5c3a0bac0aa8f56c183e3f795c523c0d4f82f \
                           --debug >/tmp/ti-server.stdout 2>/tmp/ti-server.stderr &
        echo $! > /tmp/ti-server.pid
        echo "ti-server STARTED"
        sleep 1                 # nohup takes time to start
    fi

    echo "Launched! For logs and info, see /tmp/ti-{rotate,server}.*"
}

function stop {
    if [ -z "$1" ] || [ "$1" = ti-server ]; then
        if running ti-server; then
            kill `cat /tmp/ti-server.pid`
            rm /tmp/ti-server.pid
            echo "ti-server STOPPED"
        fi
    fi
    if [ -z "$1" ] || [ "$1" = ti-rotate ]; then
        if running ti-rotate; then
            kill `cat /tmp/ti-rotate.pid`
            rm /tmp/ti-rotate.pid
            echo "ti-rotate STOPPED"
        fi
    fi
}

case "${1-help}" in
    start)
        start "${2-}"
        ;;
    stop)
        stop "${2-}"
        ;;
    restart)
        stop "${2-}"
        start "${2-}"
        ;;
    status)
        status
        ;;
    *)
        echo "Usage: ${BASH_SOURCE[0]} {start|stop|restart|status}"
        ;;
esac
